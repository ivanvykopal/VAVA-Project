/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sk.stu.fiit.GUI;

import java.awt.event.MouseAdapter;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ivan Vykopal
 */
public class RemoveStorageWindow extends javax.swing.JFrame {

    /**
     * Creates new form RemoveStorageWindow
     */
    public RemoveStorageWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnChooseStorage = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tfCode = new javax.swing.JTextField();
        tfBuilding = new javax.swing.JTextField();
        tfShelf = new javax.swing.JTextField();
        btnRemoveStorage = new javax.swing.JButton();
        tfContainItem = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbStorages = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        tfFilter = new javax.swing.JTextField();
        btnFilter = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Odstránenie skladovacieho priestoru");
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 1200));
        jPanel1.setRequestFocusEnabled(false);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 25)); // NOI18N
        jLabel1.setText("Výber skladovacieho priestoru zo systému");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(50, 50, 25, 50);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 25)); // NOI18N
        jLabel2.setText("Informácie o skladovacom priestore");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(25, 50, 25, 50);
        jPanel1.add(jLabel2, gridBagConstraints);

        btnChooseStorage.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnChooseStorage.setText("Vybrať skladovací priestor");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 25, 100);
        jPanel1.add(btnChooseStorage, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel3.setText("Kód skladovacieho priestoru:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 250, 25, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel4.setText("Budova skladu:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 250, 25, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel6.setText("Regál:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 250, 25, 0);
        jPanel1.add(jLabel6, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel7.setText("Obsahuje položku:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 250, 25, 0);
        jPanel1.add(jLabel7, gridBagConstraints);

        tfCode.setEditable(false);
        tfCode.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 250;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 500, 0, 50);
        jPanel1.add(tfCode, gridBagConstraints);

        tfBuilding.setEditable(false);
        tfBuilding.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 250;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 500, 0, 50);
        jPanel1.add(tfBuilding, gridBagConstraints);

        tfShelf.setEditable(false);
        tfShelf.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.ipadx = 250;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 500, 0, 50);
        jPanel1.add(tfShelf, gridBagConstraints);

        btnRemoveStorage.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnRemoveStorage.setText("Vymazať vybraný skladovací priestor");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.ipadx = 250;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 25, 0);
        jPanel1.add(btnRemoveStorage, gridBagConstraints);

        tfContainItem.setEditable(false);
        tfContainItem.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipadx = 250;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 500, 0, 50);
        jPanel1.add(tfContainItem, gridBagConstraints);

        tbStorages.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kód", "Budova", "Regál", "Obsahuje položku"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tbStorages);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 1000;
        gridBagConstraints.ipady = 500;
        gridBagConstraints.insets = new java.awt.Insets(25, 50, 25, 50);
        jPanel1.add(jScrollPane3, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jLabel8.setText("Filter:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 50, 25, 0);
        jPanel1.add(jLabel8, gridBagConstraints);

        tfFilter.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        tfFilter.setMinimumSize(new java.awt.Dimension(250, 28));
        tfFilter.setPreferredSize(new java.awt.Dimension(250, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 150, 25, 0);
        jPanel1.add(tfFilter, gridBagConstraints);

        btnFilter.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnFilter.setText("Filtrovať");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 150;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 450, 25, 0);
        jPanel1.add(btnFilter, gridBagConstraints);

        btnPrevious.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnPrevious.setText("<<");
        btnPrevious.setFocusTraversalPolicyProvider(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 15, 200);
        jPanel1.add(btnPrevious, gridBagConstraints);

        btnNext.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        btnNext.setText(">>");
        btnNext.setFocusTraversalPolicyProvider(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.insets = new java.awt.Insets(15, 200, 15, 0);
        jPanel1.add(btnNext, gridBagConstraints);

        jScrollPane1.setViewportView(jPanel1);

        getContentPane().add(jScrollPane1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChooseStorage;
    private javax.swing.JButton btnFilter;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnRemoveStorage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tbStorages;
    private javax.swing.JTextField tfBuilding;
    private javax.swing.JTextField tfCode;
    private javax.swing.JTextField tfContainItem;
    private javax.swing.JTextField tfFilter;
    private javax.swing.JTextField tfShelf;
    // End of variables declaration//GEN-END:variables

    public JTable getTbStoragesTable() {
        return tbStorages;
    }
    
    public DefaultTableModel getTbStoragesModel() {
        return (DefaultTableModel) tbStorages.getModel();
    }

    public void setTfBuilding(String text) {
        this.tfBuilding.setText(text);
    }

    public void setTfCode(String text) {
        this.tfCode.setText(text);
    }

    public void setTfContainItem(String text) {
        this.tfContainItem.setText(text);
    }

    public void setTfShelf(String text) {
        this.tfShelf.setText(text);
    }
    
    public String getTfFilter() {
        return tfFilter.getText().trim();
    }
    
    public void btnRemoveStorageAddMouseListener(MouseAdapter mouseAdapter) {
        btnRemoveStorage.addMouseListener(mouseAdapter);
    }
    
    public void btnChooseStorageAddMouseListener(MouseAdapter mouseAdapter) {
        btnChooseStorage.addMouseListener(mouseAdapter);
    }
    
    public void btnPreviousAddMouseListener(MouseAdapter mouseAdapter) {
        btnPrevious.addMouseListener(mouseAdapter);
    }
    
    public void btnNextAddMouseListener(MouseAdapter mouseAdapter) {
        btnNext.addMouseListener(mouseAdapter);
    }
    
    public void btnFilterAddMouseListener(MouseAdapter mouseAdapter) {
        btnFilter.addMouseListener(mouseAdapter);
    }

}
